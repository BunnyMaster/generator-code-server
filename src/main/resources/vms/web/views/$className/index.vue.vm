<script lang="ts" setup>
import {onMounted, ref} from 'vue';
import {FormInstance} from "element-plus";
import { useRenderIcon } from '@/components/ReIcon/src/hooks';
import Delete from '~icons/ep/delete';
import EditPen from '~icons/ep/edit-pen';
import Refresh from '~icons/ep/refresh';
import AddFill from '~icons/ri/add-circle-line';
import { selectUserinfo } from '@/components/RePureTableBar/Userinfo/columns';
import { deleteIds, onSearch, delete${classUppercaseName}s, onAdd, onUpdate,FormInline } from './utils/hook';
import { columns } from './utils/${classLowercaseName}-columns';
import { PureTableBar } from '@/components/RePureTableBar';
import PureTable from '@pureadmin/table';
import { use${classUppercaseName}StoreHook }  from '@/store/modules${webBasePath}/${classLowercaseName}';

  const tableRef = ref();
  const formRef = ref();
  const ${classLowercaseName}Store = use${classUppercaseName}Store();

  /** 当前页改变时 */
  const onCurrentPageChange = async (value: number) => {
          ${classLowercaseName}Store.pagination.currentPage = value;
    await onSearch();
  };

  /** 当分页发生变化 */
  const onPageSizeChange = async (value: number) => {
    ${classLowercaseName}Store.pagination.pageSize = value;
    await onSearch();
  };

  /** 选择多行 */
  const onSelectionChange = (rows: Array<any>) => {
    deleteIds.value = rows.map((row: any) => row.id);
  };

  /** 重置表单 */
  const resetForm = async (formEl: FormInstance | undefined) => {
    if (!formEl) return;
    formEl.resetFields();
    await onSearch();
  };

  onMounted(() => {
    onSearch();
  });
</script>

<template>
  <div class="main">
    <el-form ref="formRef" :inline="true" :model="${classLowercaseName}Store.form"
             class="search-form bg-bg_color w-[99/100] pl-8 pt-[12px] overflow-auto">
        #foreach($item in $columnInfoList)

          <!-- $item.comment -->
          <el-form-item label="${item.comment}" prop="${item.lowercaseName}">
            <el-input v-model="${classLowercaseName}Store.form.${item.lowercaseName}"
                      placeholder="输入${item.comment}"
                      class="!w-[180px]" clearable/>
          </el-form-item>
        #end
      <el-form-item>
        <el-button :icon="useRenderIcon('ri:search-line')" :loading="${classLowercaseName}Store.loading" type="primary"
                   @click="onSearch">
                   搜索
        </el-button>
        <el-button :icon="useRenderIcon(Refresh)" @click="resetForm(formRef)"> 重置</el-button>
      </el-form-item>
    </el-form>

    <PureTableBar :columns="columns" title="${comment}" @fullscreen="tableRef.setAdaptive()"
                  @refresh="onSearch">
      <template #buttons>
        <el-button :icon="useRenderIcon(AddFill)" type="primary" @click="onAdd"> 新增</el-button>

        <!-- 批量删除按钮 -->
        <el-button :disabled="deleteIds.length <= 0" :icon="useRenderIcon(Delete)" type="danger" @click="delete${classUppercaseName}s(deleteIds)">
          批量删除
        </el-button>
      </template>

      <template v-slot="{ size, dynamicColumns }">
        <pure-table
            ref="tableRef"
            :adaptiveConfig="{ offsetBottom: 96 }"
            :columns="dynamicColumns"
            :data="${classLowercaseName}Store.datalist"
            :header-cell-style="{ background: 'var(--el-fill-color-light)', color: 'var(--el-text-color-primary)' }"
            :loading="${classLowercaseName}Store.loading"
            :size="size"
            adaptive
            align-whole="center"
            border
            highlight-current-row
            row-key="id"
            showOverflowTooltip
            table-layout="auto"
            :pagination="${classLowercaseName}Store.pagination"
            @page-size-change="onPageSizeChange"
            @selection-change="onSelectionChange"
            @page-current-change="onCurrentPageChange"
        >
          <template #operation="{ row }">
            <el-button :icon="useRenderIcon(EditPen)" :size="size" link type="primary" @click="onUpdate(row)">
               修改
            </el-button>

            <el-button :icon="useRenderIcon(Delete)" :size="size" link type="danger" @click="delete${classUppercaseName}s(row)">
                删除
            </el-button>
          </template>
        </pure-table>
      </template>
    </PureTableBar>
  </div>
</template>
