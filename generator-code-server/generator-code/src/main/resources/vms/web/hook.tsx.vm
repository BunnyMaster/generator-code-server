import {addDialog} from '@/components/BaseDialog/index';
import {h, ref} from 'vue';
import {message, messageBox} from '@/utils/message';
import DeleteBatchDialog from "@/components/Table/DeleteBatchDialog.vue";

export const formRef = ref();
// 删除ids
export const deleteIds = ref([]);
const ${classLowercaseName}Store = use${classUppercaseName}Store();

/** 搜索初始化${comment} */
export async function onSearch() {
        ${classLowercaseName}Store.loading = true;
    await ${classLowercaseName}Store.get${classUppercaseName}List();
        ${classLowercaseName}Store.loading = false;
}

/** 添加${comment} */
export function onAdd() {
    addDialog({
        title: `$leftBrace $t("addNew")}$leftBrace$t("${classLowercaseName}")}`,
        width: '30%',
        props: {
            formInline: {
                #foreach($item in $columnInfoList)
                        $!{item.fieldName}: undefined,
                #end
            },
        },
        draggable: true,
        fullscreenIcon: true,
        closeOnClickModal: false,
        contentRenderer: () => h(${classUppercaseName}Dialog, {ref: formRef}),
        beforeSure: (done, {options}) => {
            const form = options.props.formInline as FormItemProps;
            formRef.value.formRef.validate(async (valid: any) => {
                if (!valid) return;

                const result = await ${classLowercaseName}Store.add${classUppercaseName}(form);
                if (!result) return;
                done();
                await onSearch();
            });
        },
    });
}

/** 更新${comment} */
export function onUpdate(row: any) {
    addDialog({
        title: `$leftBrace$t("modify")}$leftBrace$t("${classLowercaseName}")}`,
        width: '30%',
        props: {
            formInline: {
                #foreach($item in $columnInfoList)
                        $!{item.fieldName}: row.$!{item.fieldName},
                #end
            }
        },
        draggable: true,
        fullscreenIcon: true,
        closeOnClickModal: false,
        contentRenderer: () => h(${classUppercaseName}Dialog, {ref: formRef}),
        beforeSure: (done, {options}) => {
            const form = options.props.formInline as FormItemProps;
            formRef.value.formRef.validate(async (valid: any) => {
                if (!valid) return;

                const result = await ${classLowercaseName}Store.update${classUppercaseName}({...form, id: row.id});
                if (!result) return;
                done();
                await onSearch();
            });
        },
    });
}

/** 删除${comment} */
export const onDelete = async (row: any) => {
    const id = row.id;

    // 是否确认删除
    const result = await messageBox({
        title: $t('confirmDelete'),
        showMessage: false,
        confirmMessage: undefined,
        cancelMessage: $t("cancel_delete"),
    });
    if (!result) return;

    // 删除数据
    await ${classLowercaseName}Store.delete${classUppercaseName}([id]);
    await onSearch();
};

/** 批量删除 */
export const onDeleteBatch = async () => {
    const ids = deleteIds.value;
    const formDeletedBatchRef = ref();

    addDialog({
        title: $t('deleteBatchTip'),
        width: '30%',
        props: {formInline: {confirmText: ''}},
        draggable: true,
        fullscreenIcon: true,
        closeOnClickModal: false,
        contentRenderer: () => h(DeleteBatchDialog, {ref: formDeletedBatchRef}),
        beforeSure: (done, {options}) => {
            formDeletedBatchRef.value.formDeletedBatchRef.validate(async (valid: any) => {
                if (!valid) return;

                const text = options.props.formInline.confirmText.toLowerCase();
                if (text === 'yes' || text === 'y') {
                    // 删除数据
                    await ${classLowercaseName}Store.delete${classUppercaseName}(ids);
                    await onSearch();

                    done();
                } else message($t('deleteBatchTip'), {type: 'warning'});
            });
        },
    });
};